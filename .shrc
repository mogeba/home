#
# .shrc
#
echo "------- loading .shrc"

echo ------- variables # exports
PS1='$ '
#export PS1
echo "PS1='${PS1}'"

configure-termux ()
{
    if [ "${1}" != "--help" ] ; then
      cp "${PREFIX}/share/automake-1.16/config.guess" .
      cp "${PREFIX}/share/automake-1.16/config.sub"   .
      cp "${PREFIX}/share/automake-1.16/install-sh"   .
    fi
    CONFIG_SHELL="${PREFIX}/bin/sh" sh ./configure --prefix="${PREFIX}/local" "$@"
}

args ()
{
  if [ $# -eq 1 -a "${1}" = "help" ] ; then
    echo -------
    echo "SYNOPSIS"
    echo "  args [help] [arg ...]"
    echo "DESCRIPTION"
    echo "  tool for shell script"
    echo
  else
    echo "number of the arguments: $#"
    for var in "$@"; do
      echo "${var}"
    done
  fi
}

bak ()
{
  if [ $# -eq 0 ]; then
    find -name "*~" -print -delete
  else
    if [ "${1}" = "help" ]; then
      echo -------
      echo "SYNOPSIS"
      echo "  rmbak [help]"
      echo "DESCRIPTION"
      echo "  no argument specified, remove ~ files (backup files of emacs)"
      echo
    fi
  fi
}

cdhome ()
{
  cd "${HOME}/home"
  pwd
}

cdts ()
{
  cd "${HOME}/scheme/ts"
  pwd
}

cdts141 ()
{
  cd "${HOME}/tinyscheme-1.41"
  pwd
}

_f()
{
  local default_data="${HOME}/home/fortunes-jp/goethe.fortune"
  local data="${default_data}"
  if [ $# -gt 0 ] ; then
      data="${1}"
  fi
  "${PREFIX}/bin/echo" -e "\033[35m"
  if [ -r "${data}" -a -f "${data}" ] ; then
    fortune "${data}"
  else
    fortune "${default_data}"
  fi
  "${PREFIX}/bin/echo" -e "\033[0m"
}

f ()
{
  local flag=0
  while [ ${flag} -eq 0 ] ; do
    _f "$@"
    read -p "Push Enter key to go next or Ctrl-D to stop: " dummy
    flag=$?
  done
}

s ()
{
  rlwrap sh "$@"
}

w ()
{
  local user=`git config --global --get user.name`
  if [ "${user}" = "mogeba" ] ; then
    _f
    read -p "Push Enter key to go: " dummy
    w3m -bookmark "${HOME}/home/w3m/bookmark.html" -B
  else
    w3m -B
  fi
}

j ()
{
  local user=`git config --global --get user.name`
  if [ "${user}" = "mogeba" ] ; then
    _f
    read -p "Push Enter key to go: " dummy
    w3m -bookmark "${HOME}/home/w3m/jee.html" -B
  else
    w3m -bookmark "${HOME}/.w3m/jee.html" -B
  fi
}

see ()
{
  if [ $# -eq 0 ] ; then
    echo -------
    echo "SYNOPSIS"
    echo "  see [file ...]"
    echo "DESCRIPTION"
    echo "  see the specified file"
    echo "    or"
    echo "  list files in the specified directory"
    echo "  no argument specified, displays this message"
    echo
  else
    for var in "$@" ; do
      if [ "${var}" != "" ] ; then
        if [ -d "${var}" ] ; then
          echo "------- ${var}"
          ls -l "${var}"
        else
          echo "======= ${var}"
          cat "${var}"
        fi
      fi
    done
  fi
}

d ()
{
  if [ $# -eq 0 ] ; then
    echo -------
    echo "SYNOPSIS"
    echo "  d [home|scheme|ts1.41|ts1.39|tsdbg|slib|guile|fctx|cunit]"
    echo "DESCRIPTION"
    echo "  download by wget from the web site"
    echo "    or"
    echo "  git clone from the repository"
    echo "  no argument specified, displays this message"
    echo
  else
    for var in "$@" ; do
      case "${var}" in
	home )
	  if [ ! -e "${HOME}/home" ] ; then
	    git clone https://github.com/mogeba/home.git                  "${HOME}/home"
	  else
	    echo "${HOME}/home exists already"
	  fi
	  break;;
	scheme )
	  if [ ! -e "${HOME}/scheme" ] ; then
	    git clone https://github.com/mogeba/scheme-small-programs.git "${HOME}/scheme"
	  else
	    echo "${HOME}/scheme exists already"
	  fi
	  break;;
	ts141 )
	  if [ ! -e "${HOME}/tinyscheme-1.41" ] ; then
	    git clone https://github.com/mogeba/tinyscheme-1.41.git       "${HOME}/tinyscheme-1.41"
	  else
	    echo "${HOME}/tinyscheme-1.41 exists already"
	  fi
	  break;;
        fctx )
	  if [ ! -e "${HOME}/fctx" ] ; then
            git clone https://github.com/imb/fctx.git                     "${HOME}/fctx"
	  fi
          break;;
	ts141sf )
	  w3m https://sourceforge.net/projects/tinyscheme/files/tinyscheme/tinyscheme-1.41/tinyscheme-1.41.zip
	  break;;
	ts139 )
	  if [ ! -e "${HOME}/tinyscheme-1.39" ] ; then
	    git clone https://github.com/dchest/tinyscheme.git            "${HOME}/tinyscheme-1.39"
	  else
	    echo "${HOME}/tinyscheme-1.39 exists already"
	  fi
	  break;;
	tsdbg )
	  if [ ! -e "${HOME}/tsdbg" ] ; then
	    git clone http://git.code.sf.net/p/tsdbg/code                 "${HOME}/tsdbg"
	  else
	    echo "${HOME}/tsdbg exists already"
	  fi
	  break;;
        cunit )
          wget http://jaist.dl.sourceforge.net/project/cunit/CUnit/2.1-2/CUnit-2.1-2-src.tar.bz2
          break;;
        slib )
          wget http://groups.csail.mit.edu/mac/ftpdir/scm/slib-3b5.zip
          break;;
        guile )
          wget http://ftp.gnu.org/gnu/guile/guile-2.2.4.tar.gz
          break;;
        * )
          echo "....... downloading ${var}"
          wget "${var}"
          break;;
      esac
    done
  fi
}

p ()
{
    #pkg install git
    pkg install coreutils
    pkg install rlwrap
    pkg install make
    pkg install clang
    pkg install ctags
    pkg install ncurses-dev
    pkg install emacs
    pkg install w3m
    pkg install perl
    pkg install ruby-dev
    pkg install fortune
}

m ()
{
  if [ $# -eq 1 -a "$1" = help ] ; then
    echo -------
    echo "SYNOPSIS"
    echo "  m [help]"
    echo "  m [directory [options ...] ]"
    echo "  m . [options ...]"
    echo "DESCRIPTION"
    echo "  chdir specified directories and make."
    echo "  no arguments specified,"
    echo "    do as current directory specified without make-options."
  elif [ $# -eq 0 ]; then
    make
  else
    dir="${1}"
    shift
    ( cd "${dir}" ; make "$@" )
  fi
}

x ()
{
  if [ $# -eq 0 ] ; then
    echo -------
    echo "SYNOPSIS"
    echo "  x [command and options]"
    echo "DESCRPTION"
    echo "  add current directory to LD_LIBRARY_PATH and execute specified command."
    echo "  no command specified, displays this message."
  else
    pwd=`pwd`
    echo "======= x: LD_LIBRARY_PATH=${pwd}:${LD_LIBRARY_PATH}"
    LD_LIBRARY_PATH="${pwd}:${LD_LIBRARY_PATH}" "$@"
  fi
}

t ()
{
  local tinyscheme="${HOME}/tinyscheme-1.41"
  local r_flag="0"
  if [ "${1}" = "help" ] ; then
    echo -------
    echo "SYNOPSIS"
    echo "  t help"
    echo "  t -?"
    echo "  t [-r] [file ...]"
    echo "  t [-r] -1 file [arg ...]"
    echo "  t [-r] -c \"scheme command\" [arg ...]"
    echo "DESCRPTION"
    echo "  tinyscheme with rlwrap"
    echo "  in TINYSCHEMEINIT=${TINYSCHEMEINIT}"
    echo "  -r option specified,"
    echo "  in TINYSCHEMEINIT=${tinyscheme}/init.scm"
    echo "SEE"
    echo "  t -?"
    echo
    return 0
  elif [ "${1}" = "-?" ] ; then
    "${tinyscheme}/scheme" "${1}"
    return 0
  elif [ "${1}" = "-r" ] ; then
    shift
    r_flag="1"
  fi
  if [ ${r_flag} = "1" ] ; then
    echo "======= t: TINYSCHEMEINIT=${tinyscheme}/init.scm"
    echo "======= t: CHDIR ${HOME}"
    (cd ; TINYSCHEMEINIT="${tinyscheme}/init.scm" rlwrap -n "${tinyscheme}/scheme" "$@")
  else
    echo "======= t: TINYSCHEMEINIT=${TINYSCHEMEINIT}"
    echo "======= t: CHDIR ${HOME}"
    (cd ; rlwrap -n "${tinyscheme}/scheme" "$@")
  fi
  echo "======= t: CHDIR `pwd`"
}
